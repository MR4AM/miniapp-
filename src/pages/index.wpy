<style lang="less">
  .container{
    height: 100%;
    .button{
      width: 90%;
      text-align: center;
      font-size: 24px;
      height: 50px;
      line-height: 50px;
      border:2px solid #ccc;
      margin-top: 20px;
    }
  }
</style>
<template>
  <view class="container">
      <repeat for="{{componentsList}}" key="{{index}}" item="item">
          <view class="button" @tap="showComponent" data-type="{{item}}">{{item}}</view>
      </repeat>
      <toast  :showToast.sync="showToast" :title.sync="title"/>
      <modal :showModal.sync="showModal" :modalTitle.sync="modalTitle" :modalContent.sync="modalContent"/>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import Toast from '../components/toast'
  import utils from '../utils/utils'
  import Modal from '../components/modal'
  import jasonUtils from '../utils/jasonUtils.js'
  // import echarts from 'echarts'
  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '基于wepy对小程序常用组件进行封装'
    }
    components={
      toast: Toast,
      modal: Modal
    }
    data={
      componentsList:['toast提示','弹窗','媒体播放组件','地图定位','检测js工具方法'],
      showToast:false,//展示toast
      title:'这是一个toast',//toast文案
      showModal:false,//展示弹窗
      modalTitle:'',//弹窗title
      modalContent:'',//弹窗弹窗文本
      modalSrc:'',//弹窗图片路径
    }
    showComponent(type){
      switch(type.currentTarget.dataset.type){
        case 'toast提示':
          this.showToast=true;
          this.title='toast展示'
          this.$apply();
          setTimeout(() => {
            this.showToast=false;
            this.$apply();
          }, 3000);
        break;
        case '弹窗':
          this.showModal=true;
          this.modalTitle='测试弹窗标题';
          this.modalContent='这是一段很长很长的花花huahauhauahuhauahuahauhuahuahauhhhhhhhhhhhhhhhhhhhhh花'
          this.$apply();
          break;
        case '媒体播放组件':
          utils.route('navigate','musicplayer')
        break;
        case '地图定位':
          utils.route('navigate','test');
          break;
        case '检测js工具方法':
          //  let time=new Date();
          //  let ja2=jasonUtils.formatTime(time,'{h}时{i}分{s}秒');
          let ja1=[2,3,3,2,17,21,99,0,0];
           console.log(jasonUtils.uniqueArray(ja1),'检测工具');
          break;
        case 'js复制到粘贴板':
          let txt='关注这个小程序，关注小程序组件化市场，工具类';
          jasonUtils.jsCopy(txt);
          this.showToast=true;
          this.title=`已成功复制${txt}`;
          this.$apply();
          break;
        default:
        this.showToast=true;
        this.title='组件待开发中'
        this.$apply();
        setTimeout(() => {
         this.showToast=false;
         this.$apply();
        }, 3000);
      }
    }
    methods={}
    onLoad(){
      // console.log(echarts,'使用echarts')
    }
  }
</script>
